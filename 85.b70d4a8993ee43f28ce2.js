(window.webpackJsonp=window.webpackJsonp||[]).push([[85],{Y13r:function(e){e.exports=[{id:1,type:"  postgresql_database",properties:[{name:"name",description:'<li><p><a name="name"></a><a href="#name"><code>name</code></a> - <strong>(Required)</strong> The name of the database. Must be unique on the PostgreSQL\nserver instance where it is configured.</p>\n</li>',elementType:"li",listDepth:1},{name:"owner",description:'<li><p><a name="owner"></a><a href="#owner"><code>owner</code></a> - <strong>(Optional)</strong> The role name of the user who will own the database, or\n<code>DEFAULT</code> to use the default (namely, the user executing the command). To\ncreate a database owned by another role or to change the owner of an existing\ndatabase, you must be a direct or indirect member of the specified role, or\nthe username in the provider is a superuser.</p>\n</li>',elementType:"li",listDepth:1},{name:"tablespace_name",description:'<li><p><a name="tablespace_name"></a><a href="#tablespace_name"><code>tablespace_name</code></a> - <strong>(Optional)</strong> The name of the tablespace that will be\nassociated with the database, or <code>DEFAULT</code> to use the template database\'s\ntablespace.  This tablespace will be the default tablespace used for objects\ncreated in this database.</p>\n</li>',elementType:"li",listDepth:1},{name:"connection_limit",description:'<li><p><a name="connection_limit"></a><a href="#connection_limit"><code>connection_limit</code></a> - <strong>(Optional)</strong> How many concurrent connections can be\nestablished to this database. <code>-1</code> (the default) means no limit.</p>\n</li>',elementType:"li",listDepth:1},{name:"allow_connections",description:'<li><p><a name="allow_connections"></a><a href="#allow_connections"><code>allow_connections</code></a> - <strong>(Optional)</strong> If <code>false</code> then no one can connect to this\ndatabase. The default is <code>true</code>, allowing connections (except as restricted by\nother mechanisms, such as <code>GRANT</code> or <code>REVOKE CONNECT</code>).</p>\n</li>',elementType:"li",listDepth:1},{name:"is_template",description:'<li><p><a name="is_template"></a><a href="#is_template"><code>is_template</code></a> - <strong>(Optional)</strong> If <code>true</code>, then this database can be cloned by any\nuser with <code>CREATEDB</code> privileges; if <code>false</code> (the default), then only\nsuperusers or the owner of the database can clone it.</p>\n</li>',elementType:"li",listDepth:1},{name:"template",description:'<li><p><a name="template"></a><a href="#template"><code>template</code></a> - <strong>(Optional)</strong> The name of the template database from which to create\nthe database, or <code>DEFAULT</code> to use the default template (<code>template0</code>).  NOTE:\nthe default in Terraform is <code>template0</code>, not <code>template1</code>.  Changing this value\nwill force the creation of a new resource as this value can only be changed\nwhen a database is created.</p>\n</li>',elementType:"li",listDepth:1},{name:"encoding",description:'<li><p><a name="encoding"></a><a href="#encoding"><code>encoding</code></a> - <strong>(Optional)</strong> Character set encoding to use in the database.\nSpecify a string constant (e.g. <code>UTF8</code> or <code>SQL_ASCII</code>), or an integer encoding\nnumber.  If unset or set to an empty string the default encoding is set to\n<code>UTF8</code>.  If set to <code>DEFAULT</code> Terraform will use the same encoding as the\ntemplate database.  Changing this value will force the creation of a new\nresource as this value can only be changed when a database is created.</p>\n</li>',elementType:"li",listDepth:1},{name:"lc_collate",description:'<li><p><a name="lc_collate"></a><a href="#lc_collate"><code>lc_collate</code></a> - <strong>(Optional)</strong> Collation order (<code>LC_COLLATE</code>) to use in the\ndatabase.  This affects the sort order applied to strings, e.g. in queries\nwith <code>ORDER BY</code>, as well as the order used in indexes on text columns. If\nunset or set to an empty string the default collation is set to <code>C</code>.  If set\nto <code>DEFAULT</code> Terraform will use the same collation order as the specified\n<code>template</code> database.  Changing this value will force the creation of a new\nresource as this value can only be changed when a database is created.</p>\n</li>',elementType:"li",listDepth:1},{name:"lc_ctype",description:'<li><p><a name="lc_ctype"></a><a href="#lc_ctype"><code>lc_ctype</code></a> - <strong>(Optional)</strong> Character classification (<code>LC_CTYPE</code>) to use in the\ndatabase. This affects the categorization of characters, e.g. lower, upper and\ndigit. If unset or set to an empty string the default character classification\nis set to <code>C</code>.  If set to <code>DEFAULT</code> Terraform will use the character\nclassification of the specified <code>template</code> database.  Changing this value will\nforce the creation of a new resource as this value can only be changed when a\ndatabase is created.</p>\n</li>',elementType:"li",listDepth:1},{name:"import-example",description:'<h2 id="import-example">\n<a class="anchor" href="#import-example" name="import-example">\xbb</a>\n  Import Example\n</h2>',elementType:"h2"},{name:"",description:"<p><code>postgresql_database</code> supports importing resources.  Supposing the following\nTerraform:</p>",elementType:"p"},{name:"",description:'<div class="highlight"><pre class="highlight hcl"><code><span class="n">provider</span> <span class="s2">"postgresql"</span> <span class="p">{</span>\n  <span class="k">alias</span> <span class="o">=</span> <span class="s2">"admindb"</span>\n<span class="p">}</span>\n\n<span class="n">resource</span> <span class="s2">"postgresql_database"</span> <span class="s2">"db1"</span> <span class="p">{</span>\n  <span class="n">provider</span> <span class="o">=</span> <span class="s2">"postgresql.admindb"</span>\n\n  <span class="nb">name</span> <span class="o">=</span> <span class="s2">"testdb1"</span>\n<span class="p">}</span>\n</code></pre></div>',elementType:"div"},{name:"",description:"<p>It is possible to import a <code>postgresql_database</code> resource with the following\ncommand:</p>",elementType:"p"},{name:"",description:'<div class="highlight"><pre class="highlight plaintext"><code>$ terraform import postgresql_database.db1 testdb1\n</code></pre></div>',elementType:"div"},{name:"",description:"<p>Where <code>testdb1</code> is the name of the database to import and\n<code>postgresql_database.db1</code> is the name of the resource whose state will be\npopulated as a result of the command.</p>",elementType:"p"}],docsUrl:"https://www.terraform.io/docs/providers/postgresql/r/postgresql_database.html",docType:""},{id:2,type:"  postgresql_default_privileges",properties:[{name:"role",description:"<strong>(Required)</strong> The name of the role to which grant default privileges on.\n",elementType:"li",listDepth:1},{name:"database",description:"<strong>(Required)</strong> The database to grant default privileges for this role.\n",elementType:"li",listDepth:1},{name:"owner",description:"<strong>(Required)</strong> Role for which apply default privileges (You can change default privileges only for objects that will be created by yourself or by roles that you are a member of).\n",elementType:"li",listDepth:1},{name:"schema",description:"<strong>(Required)</strong> The database schema to set default privileges for this role.\n",elementType:"li",listDepth:1},{name:"object_type",description:"<strong>(Required)</strong> The PostgreSQL object type to set the default privileges on (one of: table, sequence).\n",elementType:"li",listDepth:1},{name:"privileges",description:"<strong>(Required)</strong> The list of privileges to apply as default privileges.\n",elementType:"li",listDepth:1}],docsUrl:"https://www.terraform.io/docs/providers/postgresql/r/postgresql_default_privileges.html",docType:""},{id:3,type:"  postgresql_extension",properties:[{name:"name",description:"<strong>(Required)</strong> The name of the extension.\n",elementType:"li",listDepth:1},{name:"schema",description:"<strong>(Optional)</strong> Sets the schema of an extension.\n",elementType:"li",listDepth:1},{name:"version",description:"<strong>(Optional)</strong> Sets the version number of the extension.\n",elementType:"li",listDepth:1},{name:"database",description:"<strong>(Optional)</strong> Which database to create the extension on. Defaults to provider database.\n",elementType:"li",listDepth:1}],docsUrl:"https://www.terraform.io/docs/providers/postgresql/r/postgresql_extension.html",docType:""},{id:4,type:"  postgresql_grant",properties:[{name:"role",description:"<strong>(Required)</strong> The name of the role to grant privileges on.\n",elementType:"li",listDepth:1},{name:"database",description:"<strong>(Required)</strong> The database to grant privileges on for this role.\n",elementType:"li",listDepth:1},{name:"schema",description:"<strong>(Required)</strong> The database schema to grant privileges on for this role.\n",elementType:"li",listDepth:1},{name:"object_type",description:"<strong>(Required)</strong> The PostgreSQL object type to grant the privileges on (one of: table, sequence).\n",elementType:"li",listDepth:1},{name:"privileges",description:"<strong>(Required)</strong> The list of privileges to grant.\n",elementType:"li",listDepth:1}],docsUrl:"https://www.terraform.io/docs/providers/postgresql/r/postgresql_grant.html",docType:""},{id:5,type:"  postgresql_role",properties:[{name:"name",description:'<li><p><a name="name"></a><a href="#name"><code>name</code></a> - <strong>(Required)</strong> The name of the role. Must be unique on the PostgreSQL\nserver instance where it is configured.</p>\n</li>',elementType:"li",listDepth:1},{name:"superuser",description:'<li><p><a name="superuser"></a><a href="#superuser"><code>superuser</code></a> - <strong>(Optional)</strong> Defines whether the role is a "superuser", and\ntherefore can override all access restrictions within the database.  Default\nvalue is <code>false</code>.</p>\n</li>',elementType:"li",listDepth:1},{name:"create_database",description:'<li><p><a name="create_database"></a><a href="#create_database"><code>create_database</code></a> - <strong>(Optional)</strong> Defines a role\'s ability to execute <code>CREATE\nDATABASE</code>.  Default value is <code>false</code>.</p>\n</li>',elementType:"li",listDepth:1},{name:"create_role",description:'<li><p><a name="create_role"></a><a href="#create_role"><code>create_role</code></a> - <strong>(Optional)</strong> Defines a role\'s ability to execute <code>CREATE ROLE</code>.\nA role with this privilege can also alter and drop other roles.  Default value\nis <code>false</code>.</p>\n</li>',elementType:"li",listDepth:1},{name:"inherit",description:'<li><p><a name="inherit"></a><a href="#inherit"><code>inherit</code></a> - <strong>(Optional)</strong> Defines whether a role "inherits" the privileges of\nroles it is a member of.  Default value is <code>true</code>.</p>\n</li>',elementType:"li",listDepth:1},{name:"login",description:'<li><p><a name="login"></a><a href="#login"><code>login</code></a> - <strong>(Optional)</strong> Defines whether role is allowed to log in.  Roles without\nthis attribute are useful for managing database privileges, but are not users\nin the usual sense of the word.  Default value is <code>false</code>.</p>\n</li>',elementType:"li",listDepth:1},{name:"replication",description:'<li><p><a name="replication"></a><a href="#replication"><code>replication</code></a> - <strong>(Optional)</strong> Defines whether a role is allowed to initiate\nstreaming replication or put the system in and out of backup mode.  Default\nvalue is <code>false</code></p>\n</li>',elementType:"li",listDepth:1},{name:"bypass_row_level_security",description:'<li><p><a name="bypass_row_level_security"></a><a href="#bypass_row_level_security"><code>bypass_row_level_security</code></a> - <strong>(Optional)</strong> Defines whether a role bypasses every\nrow-level security (RLS) policy.  Default value is <code>false</code>.</p>\n</li>',elementType:"li",listDepth:1},{name:"connection_limit",description:'<li><p><a name="connection_limit"></a><a href="#connection_limit"><code>connection_limit</code></a> - <strong>(Optional)</strong> If this role can log in, this specifies how\nmany concurrent connections the role can establish. <code>-1</code> (the default) means no\nlimit.</p>\n</li>',elementType:"li",listDepth:1},{name:"encrypted_password",description:'<li><p><a name="encrypted_password"></a><a href="#encrypted_password"><code>encrypted_password</code></a> - <strong>(Optional)</strong> Defines whether the password is stored\nencrypted in the system catalogs.  Default value is <code>true</code>.  NOTE: this value\nis always set (to the conservative and safe value), but may interfere with the\nbehavior of\n<a href="https://www.postgresql.org/docs/current/static/runtime-config-connection.html#GUC-PASSWORD-ENCRYPTION">PostgreSQL\'s <code>password_encryption</code> setting</a>.</p>\n</li>',elementType:"li",listDepth:1},{name:"password",description:'<li><p><a name="password"></a><a href="#password"><code>password</code></a> - <strong>(Optional)</strong> Sets the role\'s password. A password is only of use\nfor roles having the <code>login</code> attribute set to true.</p>\n</li>',elementType:"li",listDepth:1},{name:"roles",description:'<li><p><a name="roles"></a><a href="#roles"><code>roles</code></a> - <strong>(Optional)</strong> Defines list of roles which will be granted to this new role.</p>\n</li>',elementType:"li",listDepth:1},{name:"valid_until",description:'<li><p><a name="valid_until"></a><a href="#valid_until"><code>valid_until</code></a> - <strong>(Optional)</strong> Defines the date and time after which the role\'s\npassword is no longer valid.  Established connections past this <code>valid_time</code>\nwill have to be manually terminated.  This value corresponds to a PostgreSQL\ndatetime. If omitted or the magic value <code>NULL</code> is used, <code>valid_until</code> will be\nset to <code>infinity</code>.  Default is <code>NULL</code>, therefore <code>infinity</code>.</p>\n</li>',elementType:"li",listDepth:1},{name:"skip_drop_role",description:'<li><p><a name="skip_drop_role"></a><a href="#skip_drop_role"><code>skip_drop_role</code></a> - <strong>(Optional)</strong> When a PostgreSQL ROLE exists in multiple\ndatabases and the ROLE is dropped, the\n<a href="https://www.postgresql.org/docs/current/static/role-removal.html">cleanup of ownership of objects</a>\nin each of the respective databases must occur before the ROLE can be dropped\nfrom the catalog.  Set this option to true when there are multiple databases\nin a PostgreSQL cluster using the same PostgreSQL ROLE for object ownership.\nThis is the third and final step taken when removing a ROLE from a database.</p>\n</li>',elementType:"li",listDepth:1},{name:"skip_reassign_owned",description:'<li><p><a name="skip_reassign_owned"></a><a href="#skip_reassign_owned"><code>skip_reassign_owned</code></a> - <strong>(Optional)</strong> When a PostgreSQL ROLE exists in multiple\ndatabases and the ROLE is dropped, a\n<a href="https://www.postgresql.org/docs/current/static/sql-reassign-owned.html"><code>REASSIGN OWNED</code></a> in\nmust be executed on each of the respective databases before the <code>DROP ROLE</code>\ncan be executed to dropped the ROLE from the catalog.  This is the first and\nsecond steps taken when removing a ROLE from a database (the second step being\nan implicit\n<a href="https://www.postgresql.org/docs/current/static/sql-drop-owned.html"><code>DROP OWNED</code></a>).</p>\n</li>',elementType:"li",listDepth:1},{name:"import-example",description:'<h2 id="import-example">\n<a class="anchor" href="#import-example" name="import-example">\xbb</a>\n  Import Example\n</h2>',elementType:"h2"},{name:"",description:"<p><code>postgresql_role</code> supports importing resources.  Supposing the following\nTerraform:</p>",elementType:"p"},{name:"",description:'<div class="highlight"><pre class="highlight hcl"><code><span class="n">provider</span> <span class="s2">"postgresql"</span> <span class="p">{</span>\n  <span class="k">alias</span> <span class="o">=</span> <span class="s2">"admindb"</span>\n<span class="p">}</span>\n\n<span class="n">resource</span> <span class="s2">"postgresql_role"</span> <span class="s2">"replication_role"</span> <span class="p">{</span>\n  <span class="n">provider</span> <span class="o">=</span> <span class="s2">"postgresql.admindb"</span>\n\n  <span class="nb">name</span> <span class="o">=</span> <span class="s2">"replication_name"</span>\n<span class="p">}</span>\n</code></pre></div>',elementType:"div"},{name:"",description:"<p>It is possible to import a <code>postgresql_role</code> resource with the following\ncommand:</p>",elementType:"p"},{name:"",description:'<div class="highlight"><pre class="highlight plaintext"><code>$ terraform import postgresql_role.replication_role replication_name\n</code></pre></div>',elementType:"div"},{name:"",description:"<p>Where <code>replication_name</code> is the name of the role to import and\n<code>postgresql_role.replication_role</code> is the name of the resource whose state will\nbe populated as a result of the command.</p>",elementType:"p"}],docsUrl:"https://www.terraform.io/docs/providers/postgresql/r/postgresql_role.html",docType:""},{id:6,type:"  postgresql_schema",properties:[{name:"name",description:"<strong>(Required)</strong> The name of the schema. Must be unique in the PostgreSQL\ndatabase instance where it is configured.\n",elementType:"li",listDepth:1},{name:"owner",description:"<strong>(Optional)</strong> The ROLE who owns the schema.\n",elementType:"li",listDepth:1},{name:"if_not_exists",description:"<strong>(Optional)</strong> When true, use the existing schema if it exists. (Default: true)\n",elementType:"li",listDepth:1},{name:"policy",description:"<strong>(Optional)</strong> Can be specified multiple times for each policy.  Each\npolicy block supports fields documented below.\n",elementType:"li",listDepth:1},{name:"",description:"<p>The <code>policy</code> block supports:</p>",elementType:"p"},{name:"create",description:"<strong>(Optional)</strong> Should the specified ROLE have CREATE privileges to the specified SCHEMA.\n",elementType:"li",listDepth:1},{name:"create_with_grant",description:"<strong>(Optional)</strong> Should the specified ROLE have CREATE privileges to the specified SCHEMA and the ability to GRANT the CREATE privilege to other ROLEs.\n",elementType:"li",listDepth:1},{name:"role",description:'<strong>(Optional)</strong> The ROLE who is receiving the policy.  If this value is empty or not specified it implies the policy is referring to the <a href="https://www.postgresql.org/docs/current/static/sql-grant.html"><code>PUBLIC</code> role</a>.\n',elementType:"li",listDepth:1},{name:"usage",description:"<strong>(Optional)</strong> Should the specified ROLE have USAGE privileges to the specified SCHEMA.\n",elementType:"li",listDepth:1},{name:"usage_with_grant",description:"<strong>(Optional)</strong> Should the specified ROLE have USAGE privileges to the specified SCHEMA and the ability to GRANT the USAGE privilege to other ROLEs.\n",elementType:"li",listDepth:1},{name:"",description:'<div class="alert alert-warning" role="alert">\n<p><strong>NOTE on <code>policy</code>:</strong> The permissions of a role specified in multiple policy blocks is cumulative.  For example, if the same role is specified in two different <code>policy</code> each with different permissions (e.g. <code>create</code> and <code>usage_with_grant</code>, respectively), then the specified role with have both <code>create</code> and <code>usage_with_grant</code> privileges.</p>\n</div>',elementType:"div"},{name:"import-example",description:'<h2 id="import-example">\n<a class="anchor" href="#import-example" name="import-example">\xbb</a>\n  Import Example\n</h2>',elementType:"h2"},{name:"",description:"<p><code>postgresql_schema</code> supports importing resources.  Supposing the following\nTerraform:</p>",elementType:"p"},{name:"",description:'<div class="highlight"><pre class="highlight hcl"><code><span class="n">resource</span> <span class="s2">"postgresql_schema"</span> <span class="s2">"public"</span> <span class="p">{</span>\n  <span class="nb">name</span> <span class="o">=</span> <span class="s2">"public"</span>\n<span class="p">}</span>\n\n<span class="n">resource</span> <span class="s2">"postgresql_schema"</span> <span class="s2">"schema_foo"</span> <span class="p">{</span>\n  <span class="nb">name</span>  <span class="o">=</span> <span class="s2">"my_schema"</span>\n  <span class="n">owner</span> <span class="o">=</span> <span class="s2">"postgres"</span>\n\n  <span class="n">policy</span> <span class="p">{</span>\n    <span class="n">usage</span> <span class="o">=</span> <span class="kp">true</span>\n  <span class="p">}</span>\n<span class="p">}</span>\n</code></pre></div>',elementType:"div"},{name:"",description:"<p>It is possible to import a <code>postgresql_schema</code> resource with the following\ncommand:</p>",elementType:"p"},{name:"",description:'<div class="highlight"><pre class="highlight plaintext"><code>$ terraform import postgresql_schema.schema_foo my_schema\n</code></pre></div>',elementType:"div"},{name:"",description:"<p>Where <code>my_schema</code> is the name of the schema in the PostgreSQL database and\n<code>postgresql_schema.schema_foo</code> is the name of the resource whose state will be\npopulated as a result of the command.</p>",elementType:"p"}],docsUrl:"https://www.terraform.io/docs/providers/postgresql/r/postgresql_schema.html",docType:""}]}}]);